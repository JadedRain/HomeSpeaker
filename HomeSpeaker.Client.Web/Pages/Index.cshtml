@page
@model IndexModel
@using HomeSpeaker.Client.Web.Components

@{
    ViewData["Title"] = "Music Player";
    var artistNum = 0;
}

<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(340px, 700px));
        grid-gap: 5px;
        grid-template-areas:
        "songList songQueue";
    }

    .songList { grid-area: songList; }

    .songQueue { grid-area: songQueue; }
</style>
<component type="typeof(PlayerStatusComponent)" render-mode="ServerPrerendered" />
<component type="typeof(PlaybackControl)" render-mode="ServerPrerendered" />
<div class="grid-container">
    <div class="songList">
        <div id="accordion">
            <div class="panel-group" id="accordionY">
                @foreach (var artist in Model.Songs.Select(s => s.Artist).Distinct().OrderBy(a => a))
                {
                    artistNum++;

                <div class="card">
                    <div class="card-header" id="heading-@artistNum">
                        <h3 class="mb-0">
                            <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse-@artistNum" aria-expanded="false" aria-controls="collapse-@artistNum">
                                @artist
                            </button>
                        </h3>
                    </div>
                    <div id="collapse-@artistNum" class="collapse" aria-labelledby="heading-@artistNum" data-parent="#accordion">
                        <ul>
                            @foreach (var album in Model.Songs.Where(s => s.Artist == artist).Select(a => a.Album).Distinct().OrderBy(a => a))
                                {
                            <li>
                                <h6>@album</h6>
                                <form method="post">
                                    <input type="hidden" value="@album" name="album" />
                                    <input type="hidden" value="@artist" name="artist" />
                                    <button class="btn" asp-page-handler="PlayAlbum">Play Album</button>
                                </form>
                                <ul>
                                    @foreach (var song in Model.Songs.Where(s => s.Artist == artist && s.Album == album).OrderBy(s => s.Name))
                                            {
                                    <li>
                                        <a asp-page-handler="PlaySong" asp-route-songId="@song.SongId" title="@song.Path">@song.Name</a>
                                    </li>
                                    }
                                </ul>
                            </li>
                            }
                        </ul>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
    <div class="songQueue">
        <h4>Up Next</h4>
        <ul>
        @foreach(var song in Model.Queue)
        {
            <li>@song.Name</li>
        }
        </ul>
    </div>
</div>

