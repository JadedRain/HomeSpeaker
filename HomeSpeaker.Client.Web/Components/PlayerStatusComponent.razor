@using Microsoft.Extensions.Logging
@inject HomeSpeaker.Server.gRPC.HomeSpeaker.HomeSpeakerClient client
@inject ILogger<PlayerStatusComponent> logger
@using HomeSpeaker.Client;
@using HomeSpeaker.Shared
@using System.Threading


@if(status != null)
{
    <div>
        Percent Complete: @status.PercentComplete.ToString("p0")
        Current Song: @(status.CurrentSong?.Name ?? "No Song Included")
        Remaining: @status.Remaining.ToString(@"mm\:ss")
        <button @onclick="refresh">🔃</button>
    </div>
}

@code {
    PlayerStatus status;

    protected override void OnInitialized()
    {
        logger.LogInformation("PlayerStatusComponent OnInitialized()");
        var timer = new Timer(async (_) =>
        {
            logger.LogInformation("Timer Tick");
            await refresh();
        }, state: null, dueTime: 0, period: 1000);
    }

    async Task refresh()
    {
        try
        {
            var reply = await client.GetPlayerStatusAsync(new Server.gRPC.GetStatusRequest { });
            if (reply != null)
            {
                await InvokeAsync(() =>
                {
                    status = reply.ToPlayerStatus();
                    StateHasChanged();
                });
                logger.LogInformation($"refresh() remaining: {status?.Remaining}");
            }
        }
        catch(Exception ex)
        {
            logger.LogError(ex, "Trouble getting player status");
        }
    }
}
