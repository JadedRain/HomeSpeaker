@page "/"
@inject HomeSpeakerService svc;
@using Microsoft.Fast.Components.FluentUI


<div class="input-group">
    <input type="text" class="form-control" placeholder="Search / Filter" @bind=@filterValue />
    <span class="oi oi-magnifying-glass input-group-text"></span>
</div>

@if (songs == null)
{
    <p>Loading...</p>
}
else
{
    <div>Found @artistCount artists. You're on page @pageNum. <button @onclick=@(()=>pageNum++)>Next Page</button><button @onclick=@(()=>pageNum--)>Prev Page</button></div>
    <FluentTreeView>
        @foreach (var artist in artists.Skip(pageSize * pageNum).Take(pageSize))
        {
            <FluentTreeItem>
                @artist.Key
                @foreach (var album in from song in artist
                                      group song by song.Album into album
                                      select album)
                {
                    <FluentTreeItem>
                        @album.Key
                        @foreach (var song in album)
                        {
                            <FluentTreeItem>
                                <Song SongViewModel=@song />
                            </FluentTreeItem>
                        }
                    </FluentTreeItem>
                }
            </FluentTreeItem>
        }
    </FluentTreeView>
}

@code {
    private int pageNum = 0;
    private int pageSize = 10;
    private int artistCount;
    private string filterValue;
    public string FilterValue
    {
        get => filterValue;
        set
        {
            filterValue = value;
        }
    }

    IEnumerable<SongViewModel>? songs;
    IOrderedEnumerable<IGrouping<string, SongViewModel>> artists;

    protected override async Task OnInitializedAsync()
    {
        songs = await svc.GetAllSongsAsync();
        artists = from s in songs
                  group s by s.Artist into artists
                  orderby artists.Key
                  select artists;
        artistCount = artists.Count();
    }
}