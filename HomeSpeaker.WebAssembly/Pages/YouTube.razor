@page "/youtube"
@inject ILogger<YouTube> logger
@inject HomeSpeakerService svc

<h3>YouTube Cache</h3>

<input type="text" @bind=searchTerm />
<button @onclick=searchAsync>Search</button>

@if (isSearching)
{
    <div class="row mt-3 mx-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Searching...</span>
        </div>
    </div>
}
else if (videos == null)
{
    <p>Search for something to create a temporary fair-use local cache.</p>
}
else
{
    @foreach (var searchResult in videos)
    {
        <YouTubeSearchResult SearchResult="searchResult" />
    }
}

@code {
    bool isSearching = false;
    IEnumerable<Video> videos;
    string searchTerm;
    async Task searchAsync()
    {
        isSearching = true;
        logger.LogInformation("Starting youtube search for {searchTerm}", searchTerm);
        var response = await svc.HomeSpeakerClient.SearchViedoAsync(new SearchVideoRequest { SearchTerm = searchTerm });
        videos = response.Results;
        logger.LogInformation("Found {resultCount} results", videos.Count());
        isSearching = false;
    }
}
