@inject HomeSpeakerService svc
@inject ILogger<Song> logger

@if (SongViewModel == null)
{
    <div>Nothing to see here...</div>
}
else
{
    var classVal = "row ms-1 py-1 gx-0";
    if (ShowBackground)
    {
        classVal += " bg-light";
    }
    <div class=@classVal>
        <div class="col ms-3">
            <div class="text-wrap" @onclick=toggleDetailsView>@SongViewModel.Name</div>
            @if (ShowFolder)
            {
                <div>@SongViewModel.Folder</div>
            }
        </div>
        <div class="col-auto">
            <button @onclick=toggleDetailsView class="btn btn-outline"><span class=@toggleIcon></span></button>
            <button @onclick=Play class="btn btn-outline-secondary"><span class="oi oi-media-play" /></button>
            <button @onclick=Queue class="btn btn-outline-secondary"><span class="oi oi-plus" /></button>
        </div>
        @if (showDetails)
        {
            <span class="fw-bold ms-2">Song Actions:</span>
            <div class="row justify-content-around border-top mb-2 pt-2 g-0">
                <div class="col">
                    <button class="btn btn-danger" @onclick=delete><span class="oi oi-delete"></span> Delete</button>
                </div>
                <div class="col">
                    <button class="btn btn-success"><span class="oi oi-list"></span> Add to Playlist</button>
                </div>
                <div class="col">
                    <button class="btn btn-info"><span class="oi oi-pencil"></span> Edit Artist/Album</button>
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public SongViewModel SongViewModel { get; set; }

    [Parameter]
    public bool ShowFolder { get; set; }

    [Parameter]
    public bool ShowBackground { get; set; }

    private bool showDetails { get; set; }

    private void toggleDetailsView() => showDetails = !showDetails;
    private string toggleIcon => showDetails ? "oi oi-chevron-top" : "oi oi-chevron-bottom";

    async Task Play() => await svc.PlaySongAsync(SongViewModel.SongId);
    async Task Queue() => await svc.EnqueueSongAsync(SongViewModel.SongId);
    async Task delete() => await svc.HomeSpeakerClient.DeleteSongAsync(new DeleteSongRequest { SongId = SongViewModel.SongId });
}
