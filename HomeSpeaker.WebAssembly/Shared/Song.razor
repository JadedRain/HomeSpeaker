@inject HomeSpeakerService svc
@inject ILogger<Song> logger

@if (SongViewModel == null)
{
    <div>Nothing to see here...</div>
}
else
{
    var classVal = "row ms-1 py-1 gx-0";
    if(ShowBackground)
    {
        classVal += " bg-light";
    }
    <div class=@classVal>
        <div class="col ms-3">
            <div class="fw-bold">@SongViewModel.Name</div>
            <div>@SongViewModel.Artist @(SongViewModel.Artist != SongViewModel.Album ? $" ({SongViewModel.Album})" : string.Empty)</div>
            @if (ShowFolder)
            {
                <div>@SongViewModel.Folder</div>
            }
        </div>
        <div class="col-auto">
            <button @onclick=Play class="btn btn-outline-secondary"><span class="oi oi-media-play" /></button>
            <button @onclick=Queue class="btn btn-outline-secondary"><span class="oi oi-plus" /></button>
        </div>
    </div>
}

@code {
    [Parameter]
    public SongViewModel SongViewModel { get; set; }

    [Parameter]
    public bool ShowFolder{ get; set; }

    [Parameter]
    public bool ShowBackground { get; set; }

    async Task Play() => await svc.PlaySongAsync(SongViewModel.SongId);
    async Task Queue() => await svc.EnqueueSongAsync(SongViewModel.SongId);
}
